{"remainingRequest":"/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/node_modules/babel-loader/lib/index.js!/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/node_modules/eslint-loader/index.js??ref--14-0!/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/src/store/modules/todos.js","dependencies":[{"path":"/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/src/store/modules/todos.js","mtime":1636797917775},{"path":"/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/babel.config.js","mtime":1636788992059},{"path":"/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NoaW5qYWVodW4vcHJvamVjdC93ZWIvcmFpbHMvdGVzdC92dWVhcGkvdnVlYXBpdGVzdF9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgYXBpX3VybCA9ICJodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3YxL3RvZG9zIjsKdmFyIHN0YXRlID0gewogIHRvZG9zOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxUb2RvczogZnVuY3Rpb24gYWxsVG9kb3Moc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b2RvczsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoVG9kb3M6IGZ1bmN0aW9uIGZldGNoVG9kb3MoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaV91cmwpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ3NldFRvZG9zJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBhZGRUb2RvOiBmdW5jdGlvbiBhZGRUb2RvKF9yZWYyLCB0aXRsZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoYXBpX3VybCwgewogICAgICAgICAgICAgICAgdG9kbzogewogICAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCduZXdUb2RvJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGRlbGV0ZVRvZG86IGZ1bmN0aW9uIGRlbGV0ZVRvZG8oX3JlZjMsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5kZWxldGUoYXBpX3VybCArICIvIi5jb25jYXQoaWQpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb21taXQoJ3JlbW92ZVRvZG8nLCBpZCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGZpbHRlclRvZG9zOiBmdW5jdGlvbiBmaWx0ZXJUb2RvcyhfcmVmNCwgZXZlbnQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCBsaW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIGxpbWl0ID0gcGFyc2VJbnQoZXZlbnQudGFyZ2V0Lm9wdGlvbnNbZXZlbnQudGFyZ2V0Lm9wdGlvbnMuc2VsZWN0ZWRJbmRleF0uaW5uZXJUZXh0KTsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlfdXJsICsgIj9fbGltaXQ9Ii5jb25jYXQobGltaXQpKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0VG9kb3MnLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlVG9kbzogZnVuY3Rpb24gdXBkYXRlVG9kbyhfcmVmNSwgdXBkYXRlZFRvZG8pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoYXBpX3VybCArICIvIi5jb25jYXQodXBkYXRlZFRvZG8uaWQpLCB1cGRhdGVkVG9kbyk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ3NldFVwZGF0ZWRUb2RvJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0VG9kb3M6IGZ1bmN0aW9uIHNldFRvZG9zKHN0YXRlLCB0b2RvcykgewogICAgcmV0dXJuIHN0YXRlLnRvZG9zID0gdG9kb3M7CiAgfSwKICBuZXdUb2RvOiBmdW5jdGlvbiBuZXdUb2RvKHN0YXRlLCB0b2RvKSB7CiAgICByZXR1cm4gc3RhdGUudG9kb3MudW5zaGlmdCh0b2RvKTsKICB9LAogIHJlbW92ZVRvZG86IGZ1bmN0aW9uIHJlbW92ZVRvZG8oc3RhdGUsIGlkKSB7CiAgICByZXR1cm4gc3RhdGUudG9kb3MgPSBzdGF0ZS50b2Rvcy5maWx0ZXIoZnVuY3Rpb24gKHRvZG8pIHsKICAgICAgcmV0dXJuIHRvZG8uaWQgIT09IGlkOwogICAgfSk7CiAgfSwKICBzZXRVcGRhdGVkVG9kbzogZnVuY3Rpb24gc2V0VXBkYXRlZFRvZG8oc3RhdGUsIHVwZGF0ZWRUb2RvKSB7CiAgICB2YXIgaW5kZXggPSBzdGF0ZS50b2Rvcy5maW5kSW5kZXgoZnVuY3Rpb24gKHRvZG8pIHsKICAgICAgcmV0dXJuIHRvZG8uaWQgPT09IHVwZGF0ZWRUb2RvLmlkOwogICAgfSk7CgogICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICBzdGF0ZS50b2Rvcy5zcGxpY2UoaW5kZXgsIDEsIHVwZGF0ZWRUb2RvKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/shinjaehun/project/web/rails/test/vueapi/vueapitest_frontend/src/store/modules/todos.js"],"names":["axios","api_url","state","todos","getters","allTodos","actions","fetchTodos","commit","get","response","data","addTodo","title","post","todo","complete","deleteTodo","id","delete","filterTodos","event","limit","parseInt","target","options","selectedIndex","innerText","updateTodo","updatedTodo","put","mutations","setTodos","newTodo","unshift","removeTodo","filter","setUpdatedTodo","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst api_url = \"http://localhost:3000/api/v1/todos\";\n\nconst state = {\n  todos: []\n};\n\nconst getters = {\n  allTodos: (state) => state.todos\n};\n\nconst actions = {\n  async fetchTodos({ commit }) {\n    const response = await axios.get(api_url);\n    commit('setTodos', response.data);\n  },\n  async addTodo({ commit }, title) {\n    const response = await axios.post(api_url,\n      {\n        todo: {\n          title,\n          complete: false\n        }\n      });\n    commit('newTodo', response.data);\n  },\n  async deleteTodo({ commit }, id) {\n    await axios.delete(api_url + `/${id}`);\n    commit('removeTodo', id);\n  },\n  async filterTodos({commit}, event) {\n    const limit = parseInt(event.target.options[event.target.options.selectedIndex].innerText);\n    const response = await axios.get(api_url + `?_limit=${limit}`);\n    commit('setTodos', response.data);\n  },\n  async updateTodo({ commit }, updatedTodo) {\n    const response = await axios.put(api_url + `/${updatedTodo.id}`, updatedTodo);\n    commit('setUpdatedTodo', response.data);\n  }\n};\n\nconst mutations = {\n  setTodos: (state, todos) => (state.todos = todos),\n  newTodo: (state, todo) => (state.todos.unshift(todo)),\n  removeTodo: (state, id) =>\n    (state.todos = state.todos.filter(todo => todo.id !== id)),\n  setUpdatedTodo: (state, updatedTodo) => {\n    const index = state.todos.findIndex(todo => todo.id === updatedTodo.id);\n    if (index !== -1) {\n      state.todos.splice(index, 1, updatedTodo);\n    }\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}\n"]}]}